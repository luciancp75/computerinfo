
# Define Variables
$ArtifactoryBaseUrl = "https://your-artifactory.com/artifactory"  # Replace with your Artifactory URL
$RepoName = "my-repo"  # Replace with your repository name
$ApiKey = "YOUR_API_KEY"  # Replace with your Artifactory API Key
$OutputFile = "FolderStructure.txt"

# Define API URL to get repo structure
$ApiUrl = "$ArtifactoryBaseUrl/api/storage/$RepoName"

# Headers for Authentication
$Headers = @{
    "X-JFrog-Art-Api" = $ApiKey
}

$Headers = @{
    Authorization = "Basic " + [Convert]::ToBase64String([Text.Encoding]::ASCII.GetBytes("username:password"))
}

# Function to Recursively Get Folder Structure
function Get-FolderStructure {
    param ($Url, $Indent)

    $Response = Invoke-RestMethod -Uri $Url -Headers $Headers -Method Get

    if ($Response.children) {
        foreach ($Child in $Response.children) {
            $ChildUrl = "$Url/$($Child.uri.Trim('/'))"
            $Indentation = " " * $Indent
            $Type = if ($Child.folder) { "[Folder]" } else { "[File]" }

            # Output to console and file
            $Line = "$Indentation$Type $($Child.uri.Trim('/'))"
            Write-Output $Line
            Add-Content -Path $OutputFile -Value $Line

            # If it's a folder, recurse into it
            if ($Child.folder) {
                Get-FolderStructure -Url $ChildUrl -Indent ($Indent + 2)
            }
        }
    }
}

# Start Retrieving the Structure
Write-Output "Retrieving folder structure of '$RepoName'..."
Add-Content -Path $OutputFile -Value "Folder Structure of '$RepoName':"

Get-FolderStructure -Url $ApiUrl -Indent 0

Write-Output "Folder structure saved to '$OutputFile'"
