
Add-Type -AssemblyName System.Windows.Forms
Add-Type -AssemblyName System.Drawing

# Create the Form
$form = New-Object System.Windows.Forms.Form
$form.Text = "Live Process Bandwidth Monitor"
$form.Size = New-Object System.Drawing.Size(500, 350)
$form.StartPosition = "CenterScreen"

# Create a dropdown (ComboBox)
$comboBox = New-Object System.Windows.Forms.ComboBox
$comboBox.Location = New-Object System.Drawing.Point(50,30)
$comboBox.Size = New-Object System.Drawing.Size(380,30)
$comboBox.DropDownStyle = 'DropDownList'

# Populate dropdown with current processes
Get-Process | Sort-Object ProcessName | ForEach-Object {
    if ($_.ProcessName -and !$comboBox.Items.Contains($_.ProcessName)) {
        $comboBox.Items.Add($_.ProcessName)
    }
}

# Create Start Monitoring Button
$startButton = New-Object System.Windows.Forms.Button
$startButton.Location = New-Object System.Drawing.Point(50,80)
$startButton.Size = New-Object System.Drawing.Size(180,30)
$startButton.Text = "Start Monitoring"

# Create Stop Monitoring Button
$stopButton = New-Object System.Windows.Forms.Button
$stopButton.Location = New-Object System.Drawing.Point(250,80)
$stopButton.Size = New-Object System.Drawing.Size(180,30)
$stopButton.Text = "Stop Monitoring"
$stopButton.Enabled = $false

# Create a Label to show results
$label = New-Object System.Windows.Forms.Label
$label.Location = New-Object System.Drawing.Point(50, 130)
$label.Size = New-Object System.Drawing.Size(400, 150)
$label.Text = ""

# Log file path
$logFile = "$env:USERPROFILE\live_process_bandwidth_log.txt"

# Timer for live monitoring
$timer = New-Object System.Windows.Forms.Timer
$timer.Interval = 2000  # Update every 2 seconds

# Define Monitoring Action
$timer.Add_Tick({
    if ($comboBox.SelectedItem) {
        try {
            $processName = $comboBox.SelectedItem

            $counters = Get-Counter -Counter "\Process($processName)\IO Read Bytes/sec","\Process($processName)\IO Write Bytes/sec" -ErrorAction SilentlyContinue

            if ($counters.CounterSamples.Count -gt 0) {
                $readBytes = $counters.CounterSamples | Where-Object { $_.Path -like "*IO Read Bytes/sec*" } | Select-Object -ExpandProperty CookedValue
                $writeBytes = $counters.CounterSamples | Where-Object { $_.Path -like "*IO Write Bytes/sec*" } | Select-Object -ExpandProperty CookedValue

                $totalBytes = $readBytes + $writeBytes
                $totalMBps = [math]::Round($totalBytes/1MB, 4)

                $timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
                $output = "[$timestamp] Process: $processName`nApprox IO Bandwidth: $totalMBps MB/sec"

                $label.Text = $output

                # Append to log
                "$output`n" | Out-File -Append -FilePath $logFile
            }
            else {
                $label.Text = "Process not found or closed."
            }
        }
        catch {
            $label.Text = "Error accessing performance counters."
        }
    }
})

# Start Button Event
$startButton.Add_Click({
    if ($comboBox.SelectedItem) {
        $timer.Start()
        $startButton.Enabled = $false
        $stopButton.Enabled = $true
    } else {
        [System.Windows.Forms.MessageBox]::Show("Please select a process first.")
    }
})

# Stop Button Event
$stopButton.Add_Click({
    $timer.Stop()
    $startButton.Enabled = $true
    $stopButton.Enabled = $false
})

# Add controls to Form
$form.Controls.Add($comboBox)
$form.Controls.Add($startButton)
$form.Controls.Add($stopButton)
$form.Controls.Add($label)

# Run the Form
[void]$form.ShowDialog()
